// Code generated by grpc-proxy/proto/cmd/codegen.go; DO NOT EDIT.

package main

import (
	"reflect"

	"github.com/zhangyunhao116/skipmap"

	google_iam_credentials_v1_credentialspb "cloud.google.com/go/iam/credentials/apiv1/credentialspb"
	_ "google.golang.org/grpc"
	_ "google.golang.org/grpc/codes"
	_ "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/reflect/protoreflect"
)

func Load(service2Host *skipmap.OrderedMap[string, string], method2RequestType, method2ResponseType *skipmap.OrderedMap[string, reflect.Type]) {
	service2Host.Store("google.iam.credentials.v1.IAMCredentials", "iamcredentials.googleapis.com")
	method2RequestType.Store("google.iam.credentials.v1.IAMCredentials/GenerateAccessToken", reflect.TypeOf((*google_iam_credentials_v1_credentialspb.GenerateAccessTokenRequest)(nil)).Elem())
	method2ResponseType.Store("google.iam.credentials.v1.IAMCredentials/GenerateAccessToken", reflect.TypeOf((*google_iam_credentials_v1_credentialspb.GenerateAccessTokenResponse)(nil)).Elem())
	method2RequestType.Store("google.iam.credentials.v1.IAMCredentials/GenerateIdToken", reflect.TypeOf((*google_iam_credentials_v1_credentialspb.GenerateIdTokenRequest)(nil)).Elem())
	method2ResponseType.Store("google.iam.credentials.v1.IAMCredentials/GenerateIdToken", reflect.TypeOf((*google_iam_credentials_v1_credentialspb.GenerateIdTokenResponse)(nil)).Elem())
	method2RequestType.Store("google.iam.credentials.v1.IAMCredentials/SignBlob", reflect.TypeOf((*google_iam_credentials_v1_credentialspb.SignBlobRequest)(nil)).Elem())
	method2ResponseType.Store("google.iam.credentials.v1.IAMCredentials/SignBlob", reflect.TypeOf((*google_iam_credentials_v1_credentialspb.SignBlobResponse)(nil)).Elem())
	method2RequestType.Store("google.iam.credentials.v1.IAMCredentials/SignJwt", reflect.TypeOf((*google_iam_credentials_v1_credentialspb.SignJwtRequest)(nil)).Elem())
	method2ResponseType.Store("google.iam.credentials.v1.IAMCredentials/SignJwt", reflect.TypeOf((*google_iam_credentials_v1_credentialspb.SignJwtResponse)(nil)).Elem())
}
