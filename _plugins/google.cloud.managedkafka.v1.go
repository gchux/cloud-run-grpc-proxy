// Code generated by grpc-proxy/proto/cmd/codegen.go; DO NOT EDIT.

package main

import (
	"reflect"

	"github.com/zhangyunhao116/skipmap"

	google_longrunning_longrunningpb "cloud.google.com/go/longrunning/autogen/longrunningpb"
	google_cloud_managedkafka_v1_managedkafkapb "cloud.google.com/go/managedkafka/apiv1/managedkafkapb"
	_ "google.golang.org/grpc"
	_ "google.golang.org/grpc/codes"
	_ "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/reflect/protoreflect"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

func Load(service2Host *skipmap.OrderedMap[string, string], method2RequestType, method2ResponseType *skipmap.OrderedMap[string, reflect.Type]) {
	service2Host.Store("google.cloud.managedkafka.v1.ManagedKafka", "managedkafka.googleapis.com")
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/CreateCluster", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.CreateClusterRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/CreateCluster", reflect.TypeOf((*google_longrunning_longrunningpb.Operation)(nil)).Elem())
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/CreateTopic", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.CreateTopicRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/CreateTopic", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.Topic)(nil)).Elem())
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/DeleteCluster", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.DeleteClusterRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/DeleteCluster", reflect.TypeOf((*google_longrunning_longrunningpb.Operation)(nil)).Elem())
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/DeleteConsumerGroup", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.DeleteConsumerGroupRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/DeleteConsumerGroup", reflect.TypeOf((*emptypb.Empty)(nil)).Elem())
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/DeleteTopic", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.DeleteTopicRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/DeleteTopic", reflect.TypeOf((*emptypb.Empty)(nil)).Elem())
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/GetCluster", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.GetClusterRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/GetCluster", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.Cluster)(nil)).Elem())
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/GetConsumerGroup", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.GetConsumerGroupRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/GetConsumerGroup", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.ConsumerGroup)(nil)).Elem())
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/GetTopic", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.GetTopicRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/GetTopic", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.Topic)(nil)).Elem())
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/ListClusters", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.ListClustersRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/ListClusters", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.ListClustersResponse)(nil)).Elem())
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/ListConsumerGroups", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.ListConsumerGroupsRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/ListConsumerGroups", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.ListConsumerGroupsResponse)(nil)).Elem())
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/ListTopics", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.ListTopicsRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/ListTopics", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.ListTopicsResponse)(nil)).Elem())
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/UpdateCluster", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.UpdateClusterRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/UpdateCluster", reflect.TypeOf((*google_longrunning_longrunningpb.Operation)(nil)).Elem())
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/UpdateConsumerGroup", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.UpdateConsumerGroupRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/UpdateConsumerGroup", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.ConsumerGroup)(nil)).Elem())
	method2RequestType.Store("google.cloud.managedkafka.v1.ManagedKafka/UpdateTopic", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.UpdateTopicRequest)(nil)).Elem())
	method2ResponseType.Store("google.cloud.managedkafka.v1.ManagedKafka/UpdateTopic", reflect.TypeOf((*google_cloud_managedkafka_v1_managedkafkapb.Topic)(nil)).Elem())
}
